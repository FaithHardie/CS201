---
title: "DPLYR penguins"
format: html
editor: visual
---

```{r}
library(tidyverse) 
library(palmerpenguins) 
library(here)
```

```{r}
penguins <- read_csv(here("data/penguins_lter.csv"))
```

## 3. Filter()

#### **Activity1**

Use `filter()` to create a subset from `penguins` that only contains gentoo penguins with a bill depth greater than or equal to 15.5 millimeters.

```{r}
penguins_data_from_package %>% 
  filter(species=="Gentoo", bill_depth_mm>= 15.5) 
```

####  Activity2

Use `filter()` to create a subset from `penguins` that contains observations for male penguins recorded at Dream and Biscoe Islands.

```{r}
penguins_data_from_package %>% 
  filter(sex == "male", island == "Dream" | island == "Bisoce")
```

####  **Activity3**

Use `filter()` to create a subset from `penguins` that contains observations for female Adelie penguins with bill lengths less than 35 mm.

```{r}
penguins_data_from_package %>% 
  filter(species == "Adelie", sex == "female", bill_length_mm < 35)
```

####  **Activity4**

Create a subset from `penguins` containing observations for female chinstrap penguins on Dream and Torgersen Islands.

```{r}
penguins_data_from_package %>% 
  filter(sex == "female", island=="Dream" | island== "Torgensen")
```

#### **Activity5**

Create a subset from penguins that contains penguins that are either gentoos or have a body mass greater than 4500.

```{r}
penguins_data_from_package %>% 
  filter(species == "Gentoos" | body_mass_g > 4500)
```

## **4. Select()**

#### Activity1

Starting with the penguins data, only keep the body_mass_g variable.

```{r}
penguins_data_from_package %>%
  select(body_mass_g)
```

#### Activity2

Starting with the penguins data, keep only columns from bill_length_mm to body_mass_g and year.

```{r}
penguins_data_from_package %>%
  select(bill_length_mm:body_mass_g, year)
```

#### Activity3

Starting with the penguins data, keep all columns except island.

```{r}
penguins_data_from_package %>%
  select(-island)
```

#### Activity4

From penguins, keep all variables except species, sex and year.

```{r}
penguins_data_from_package %>%
  select(!c(species, sex, year))
```

#### Activity5

Keep the species column and any columns that end with "mm".

```{r}
penguins_data_from_package %>%
  select(species, ends_with("mm"))
```

#### Activity6 

From `penguins`, keep any columns that contain “bill” OR end with “mm”.

```{r}
penguins_data_from_package %>%
  select(contains("bill") | ends_with("mm"))
```

#### Activity7

In a piped sequence, starting from `penguins`: Only keep observations for female penguins observed on Dream Island, THEN… Keep variables `species`, and any variable starting with “bill”.

```{r}
penguins_data_from_package %>% 
  filter(sex == "female", island == "Dream") %>% 
  select(species, starts_with("bill"))
```

## **5.Relocate()**

#### Activity1 

Starting with `penguins`, move the `species` variable to before the `sex` variable.

```{r}
penguins_data_from_package %>% 
  relocate(species, .before = sex)
```

#### Activity2 

Starting with `penguins`, relocate the `bill_length_mm` variable so that it is the first column.

```{r}
penguins_data_from_package %>% 
  relocate(bill_length_mm)
```

#### Activity3 

Move any factor variables to after any integer variables (`is.integer`).

```{r}
penguins_data_from_package %>% 
  relocate(where(is.factor), .after = where(is.integer))
```

## **6. Rename()**

#### Activity1 

Starting with `penguins`, rename the `flipper_length_mm` column to `flipper_mm`.

```{r}
penguins_data_from_package %>% 
  rename(flipper_mm = flipper_length_mm)
```

#### Activity2 

Starting with `penguins`, rename the `island` column to `island_name` and the `species` column to `penguin_spp`.

```{r}
penguins_data_from_package %>% 
  rename(island_name = island, penguin_spp = species)
```

#### Activity3 

Starting with `penguins`, convert any column names that start with “bill” to upper case.

```{r}
penguins_data_from_package %>% 
  rename_with(toupper, starts_with("bill"))
```

## **7. Mutate()**

#### Activity1 

Add a column to `penguins` that contains a new column `flipper_m`, which is the `flipper_length_mm` (flipper length in millimeters) converted to units of meters.

```{r}
penguins_data_from_package %>%
  mutate(flipper_m = flipper_length_mm / 1000)
```

#### Activity2 

The `year` column in `penguins` is currently an integer. Add a new column named `year_fct` that is the year converted to a factor (hint: `as.factor()`).

```{r}
penguins_data_from_package %>% 
  mutate(year_fct = as.factor(year))
```

#### Activity3 

To `penguins`, add a new column `mass_lb` that contains penguin body mass, currently in grams, converted to pounds (1 gram = 0.0022 lb).

```{r}
penguins_data_from_package %>% 
  mutate(mass_lb = body_mass_g * 0.0022 )
```

#### Activity4 

Starting with `penguins`, do the following within a single `mutate()` function: Convert the `species` variable to a character, add a new column (called `flipper_cm` with flipper length in centimeters), convert the `island` column to lowercase.

```{r}
penguins_data_from_package %>% 
  mutate(species = as.character(species),
    flipper_cm = flipper_length_mm / 10,
    island = tolower(island))
```

## **8.Group_by() %\>% Summarize()**

#### Activity1 

Starting with `penguins`, create a summary table containing the maximum and minimum length of flippers (call the columns `flip_max` and `flip_min`) for chinstrap penguins, grouped by island.

```{r}
penguins_data_from_package %>%  
  filter(species == "Chinstrap") %>% 
  group_by(island) %>%
  summarize(flip_max = max(flipper_length_mm),
            flip_min = min(flipper_length_mm))
```

#### Activity2 

Starting with `penguins`, group the data by species and year, then create a summary table containing the mean bill depth (call this `bill_depth_mean`) and mean bill length (call this `bill_length_mean`) for each group. Don’t forget: `na.rm = TRUE`.

```{r}
penguins_data_from_package %>% 
  group_by(species, year) %>% 
  summarize(bill_depth_mean = mean(bill_depth_mm, na.rm = TRUE),
            bill_length_mean = mean(bill_length_mm, na.rm = TRUE))
```

#### Activity3 

Starting with `penguins`, in a piped sequence: Add a new column called `bill_ratio` that is the ratio of bill length to bill depth (hint: `mutate()`), only keep columns `species` and `bill_ratio`, group the data by `species`, create a summary table containing the mean of the `bill_ratio` variable, by species (name the column in the summary table `bill_ratio_mean`).

```{r}
penguins_data_from_package %>% 
  mutate(bill_ratio = bill_length_mm / bill_depth_mm) %>% 
  select(species, bill_ratio) %>% 
  group_by(species) %>% 
  summarize(bill_ratio_mean = mean(bill_ratio, na.rm = TRUE))
```

## **9.Across()**

#### Activity 1 

Starting with `penguins`, group data by island then use `across()` to find the median value of groups for any columns containing the string “mm”. The names in the resulting table should be the original column name followed by an underscore, then the word “median” (e.g. colname_median).

```{r}
penguins_data_from_package %>% 
  group_by(island) %>% 
  summarize(across(contains("mm"), median, na.rm = TRUE, .names = "{.col}_median"))
```

#### Activity 2 

Starting with `penguins`, only keep observations for Adelie penguins, then use `across()` to find the maximum value for any numeric variable (hint: `where(is.numeric)`) for each island (i.e. group by island).

```{r}
penguins_data_from_package %>% 
  filter(species == "Adelie") %>%
  group_by(island) %>% 
  summarize(across(where(is.numeric), max, na.rm = TRUE))
```

#### Activity 3 

Starting from `penguins`, write a piped sequence to: Exclude penguins observed on Biscoe Island, only keep variables `species` through `body_mass_g`, rename the `species` variable to `spp_penguin`, group the data by `spp_penguin`, find the mean value for any variable containing the string “length”, by penguin species, with column names updated to the original column name appended with "\_mean" at the end.

```{r}
penguins_data_from_package %>% 
  filter(island != "Biscoe") %>% 
  select(species:body_mass_g) %>% 
  rename(spp_penguins = species) %>% 
  group_by(spp_penguins) %>% 
  summarize(across(contains("length"), mean, na.rm = TRUE, .names = "{.col}_mean"))
```

## **10. Count()**

#### Activity1 

Starting with `penguins`, find counts of observation by species, island and year.

```{r}
penguins_data_from_package %>% 
   count(species, island, year)
```

#### Activity2 

Starting with `penguins`, filter to only keep Adelie and gentoo penguins, then find counts by species and sex.

```{r}
penguins_data_from_package %>% 
  filter(species != "Chinstrap") %>% 
  count(species, sex)
```

## **11. Case_when()**

#### Activity1 

Add a new column to `penguins` called `study_year` that contains: “Year 1” if the year is 2007, “Year 2” if the year is 2008, “Year 3” if the year is 2009.

```{r}
penguins_data_from_package %>% 
  mutate(study_year = case_when(
         year == 2007 ~ "Year 1",
         year == 2008 ~ "Year 2",
         year == 2009 ~ "Year 3"))
```

#### Activity2 

Starting with `penguins`, only keep observations for chinstrap penguins, then only keep the `flipper_length_mm` and `body_mass_g` variables. Add a new column called `fm_ratio` that contains the ratio of flipper length to body mass for each penguin. Next, add another column named `ratio_bin` which contains the word “high” if `fm_ratio` is greater than or equal to 0.05, “low” if the ratio is less than 0.05, and “no record” if anything else (e.g. `NA`).

```{r}
penguins_data_from_package %>% 
  filter(species == "Chinstrap") %>% 
  select(flipper_length_mm, body_mass_g) %>% 
  mutate(fm_ratio = flipper_length_mm / body_mass_g) %>% 
  mutate(ratio_bin = case_when(
         fm_ratio >= 0.05 ~ "high",
         fm_ratio < 0.05 ~ "low",
         TRUE ~ "no record"))
```
